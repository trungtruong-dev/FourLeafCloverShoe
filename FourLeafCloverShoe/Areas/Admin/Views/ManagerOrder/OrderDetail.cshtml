@model IEnumerable<FourLeafCloverShoe.Share.Models.OrderItem>
@using FourLeafCloverShoe.Share.ViewModels
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Chi tiết đơn hàng";
    var lstSpCT = ViewBag.lstProduct as X.PagedList.IPagedList<ProductDeailViewModel>;
    ViewBag.pTitleLink = "ManagerOrder";

}
<style>
    /* Đảm bảo hình ảnh vừa với card */
    .custom-img {
        width: 100%;
        height: auto;
        object-fit: cover;
        max-height: 200px; /* Hoặc tùy chỉnh kích thước phù hợp */
    }

    /* Thu nhỏ ô input và nút "Thêm" */
    .custom-input {
        width: 60px; /* Tùy chỉnh kích thước phù hợp */
    }

    .custom-button {
        padding: 5px 10px; /* Tùy chỉnh padding phù hợp */
        color: blue;
    }

    /* Đảm bảo card không bị tràn ra ngoài */
    .product-card {
        overflow: hidden;
        margin-bottom: 20px;
        border-radius: 10px; /* Tùy chỉnh border-radius nếu muốn */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        width: 200px;
    }
    /* Đảm bảo khoảng cách giữa các phần tử trong card */
    .card-body {
        padding: 15px;
    }

    .prod-content {
        font-size: 14px;
    }

</style>
<link rel="stylesheet" href="~/fileadmin/Orderdetail.css">
<script>
    function openTab(evt, tabName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tab-content");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
    }
</script>

<div class="container-fluid">
    <div class="header">
        <h2>Chi tiết đơn hàng</h2>
    </div>
    <div class="tabs">
        <button class="tablinks active" onclick="openTab(event, 'thongtin')">Thông tin</button>
        <button class="tablinks" onclick="openTab(event, 'giaohang')">Thông tin giao hàng</button>
        <button class="tablinks" onclick="openTab(event, 'lichsudiem')">Lịch dùng xu</button>
    </div>
    <div id="thongtin" class="tab-content" style="display: block;">
        <div class="details">
            <div class="details-left">
                <p>Mã hóa đơn: <span>@Model.FirstOrDefault().Orders.OrderCode</span></p>
                <p>Ngày tạo: <span>@Model.FirstOrDefault().Orders.CreateDate</span></p>
                <p>Ngày thanh toán: <span>@Model.FirstOrDefault().Orders.PaymentDate</span></p>
                <p>Phương thức thanh toán: <span>@Model.FirstOrDefault().Orders.PaymentType</span></p>
                <p>Khách hàng: @Model.FirstOrDefault().Orders.RecipientName</p>
                <p>
                    Nhân viên:
                    @if (@Model.FirstOrDefault().Orders.StaffId == null)
                    {
                        <span>Chưa có người xác nhận</span>
                    }
                    else
                    {
                        var user = await UserManager.FindByIdAsync(@Model.FirstOrDefault().Orders.StaffId);
                        if (user != null)
                        {
                            <span>@user.UserName</span> <!-- Hoặc @user.NormalizedUserName nếu bạn có thuộc tính FullName -->
                        }
                        else
                        {
                            <span>Không tìm thấy nhân viên</span>
                        }
                    }
                </p>
            </div>
            @* <div class="details-right note">
                <label for="note">Ghi chú:</label>
                <textarea id="note"></textarea>
            </div> *@
        </div>
        @if (Model.FirstOrDefault().Orders.OrderStatus == 2 || Model.FirstOrDefault().Orders.OrderStatus == 3 || Model.FirstOrDefault().Orders.OrderStatus == 0)
        {
            <div class="col-md-12 col-sm-12 py-2 align-items-center d-flex info-header justify-content-end">
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                    Thêm sản phẩm
                </button>

            </div>
            <!-- Modal -->
            <div class="modal fade" id="exampleModal" tabindex="-1" data-bs-backdrop="static" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Danh sách sản phẩm</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="row mb-3">
                                <form asp-action="OrderDetail" method="get" onclick="setModalStatus()">
                                    <input hidden name="orderId" value="@Model.FirstOrDefault().OrderId" />
                                    <div class="form-actions no-color">
                                        <div class="row">
                                            <div class="col-6">
                                                <input class="form-control" style="width:100%" type="text" id="keyWord" name="keyWord" placeholder="Nhập tên sản phẩm" />
                                            </div>
                                            <div class="col-6">
                                                <input type="submit" value="Tìm Kiếm" class="btn btn-info" />
                                            </div>
                                        </div>
                                    </div>
                                </form>
                                <div id="message"></div>
                            </div>
                            <div id="productList" class="row">
                                @if (lstSpCT != null && lstSpCT.Count > 0)
                                {
                                    @foreach (var item in lstSpCT)
                                    {
                                        <div class="col-3" style="width:20%">
                                            <form class="formproduct" asp-controller="ManagerOrder" asp-action="AddProductDetailToOrder" asp-route-productDetailId="@item.Id" asp-route-orderId="@Model.FirstOrDefault().Orders.Id">
                                                <div class="card product-card">
                                                    <div class="card-img-top">
                                                        <a href="">
                                                            <img src="@item.ImageUrl" alt="image" class="img-prod img-fluid custom-img">
                                                        </a>
                                                    </div>
                                                    <div class="card-body">
                                                        <a href="">
                                                            <p class="prod-content mb-0 text-muted">@item.ProductName - SL: @item.Quantity</p>
                                                        </a>
                                                        <p class="prod-content mb-0 text-muted">@item.SizeName - @item.ColorName</p>
                                                        <div class="d-flex align-items-center justify-content-between mt-2 mb-3 flex-wrap gap-1">
                                                            <b class="mb-0 text-truncate"><b>Giá bán: @item.Price?.ToString("N0") VNĐ</b></b>
                                                        </div>
                                                        <div class="d-flex">
                                                            <div class="flex-shrink-0">
                                                                <div class="d-grid">
                                                                    <input class="form-control form-control-sm custom-input" type="number" name="Quantity" min="0" value="1" />
                                                                </div>
                                                            </div>
                                                            <div class="flex-grow-1 ms-3">
                                                                <div class="d-grid">
                                                                    <button class="addProductButton btn-prod-card form-control-sm custom-button">Thêm</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    }
                                }
                                @if (lstSpCT != null && lstSpCT.Count > 0)
                                {
                                    <nav aria-label="Page navigation">
                                        <ul class="pagination justify-content-center">
                                            @for (int i = 1; i <= lstSpCT.PageCount; i++)
                                            {
                                                <li class="page-item @(i == lstSpCT.PageNumber ? "active" : "")">
                                                    @if (i == lstSpCT.PageNumber)
                                                    {
                                                        <span class="page-link">@i <span class="sr-only">(current)</span></span>
                                                    }
                                                    else
                                                    {
                                                        <a class="page-link" asp-action="OrderDetail" asp-route-orderId="@Model.FirstOrDefault().Orders.Id" asp-route-pageNumber="@i" asp-route-keyWord="@ViewBag.Keyword" onclick="setModalStatus()">@i</a>
                                                    }
                                                </li>
                                            }
                                        </ul>
                                    </nav>
                                }
                            </div>

                        </div>

                    </div>

                </div>
            </div>

        }
        <table class="table">
            <thead>
                <tr>
                    <th>Mã hàng</th>
                    <th>Mặt hàng</th>
                    <th>Số lượng</th>
                    <th>Đơn giá</th>
                    <th>Thành tiền</th>
                    @if (Model.FirstOrDefault().Orders.OrderStatus == 2 || Model.FirstOrDefault().Orders.OrderStatus == 3 || Model.FirstOrDefault().Orders.OrderStatus == 0)
                    {
                        <th>Chức năng</th>
                    }

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.ProductDetails.SKU</td>
                        <td>@item.ProductDetails.Products.ProductName<span> - @item.ProductDetails.Size.Name - @item.ProductDetails.Colors.ColorName</span></td>
                        @if (Model.FirstOrDefault().Orders.OrderStatus == 2 || Model.FirstOrDefault().Orders.OrderStatus == 3 || Model.FirstOrDefault().Orders.OrderStatus == 0)
                        {
                            <td>
                                <button type="button" class="btn btn-primary fw-normal text-white" onclick="giam('@item.ProductDetailId', '@item.OrderId')">-</button>
                                <span style="padding:5px" id="SL_@item.Id">@item.Quantity</span>
                                <button type="button" class="btn btn-primary fw-normal text-white" onclick="tang('@item.ProductDetailId', '@item.OrderId')">+</button>
                            </td>
                            <td>@item.Price?.ToString("N0")</td>
                            var tt = item.Quantity * item.ProductDetails.PriceSale;
                            <td id="TT_@item.Id">@tt?.ToString("N0")</td>
                            <td>
                                <button type="button" class="btn btn-danger fw-normal text-white" onclick="removeItem('@item.ProductDetailId', '@item.OrderId')">Xoá</button>
                            </td>
                        }
                        else
                        {
                            <td >@item.Quantity</td>
                            <td id="SL_@item.Id">@item.Price?.ToString("N0")</td>
                            var tt = item.Quantity * item.ProductDetails.PriceSale;
                            <td id="TT_@item.Id">@tt?.ToString("N0")</td>

                        }

                    </tr>

                }


            </tbody>
        </table>
        <div class="details">
            <div class="details-right">
                <h6>
                    Tổng số lượng:
                    <span>
                        @{
                            var tongcong = @Model.Sum(c => c.Quantity);
                                    <label class="col-sm-5 col-form-label">
                                        <b>
                                            @tongcong?.ToString("n0")
                                        </b>
                                    </label>
                        }
                    </span>
                </h6>
                <h6>Trừ tiêu điểm: <span>@Model.FirstOrDefault().Orders.CoinsUsed?.ToString("N0")</span></h6>
                <h6>Trừ voucher: <span>@Model.FirstOrDefault().Orders.VoucherValue?.ToString("N0")</span></h6>
                <h6>Phí vận chuyển: <span>@Model.FirstOrDefault().Orders.ShippingFee?.ToString("N0")</span></h6>
                <h6>Tổng cộng: <span id="Total">@Model.FirstOrDefault().Orders.TotalAmout?.ToString("N0")</span></h6>
                <div class="col-lg-4 col-sm-12">
                    <div class="form-group">
                        <h6><span class="form-label control-label">Ghi chú:</span></h6>
                        <div class="col-sm-12">
                            <textarea class="form-control" style="height: 130px; width:250px;" id="ghiChuinTTHD">@Model.FirstOrDefault().Orders.Description</textarea>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="giaohang" class="tab-content" style="display: none;">
        <p>Họ tên: @Model.FirstOrDefault().Orders.RecipientName</p>
        <p>Số điện thoại: @Model.FirstOrDefault().Orders.RecipientPhone</p>
        <p>Địa chỉ nhận hàng: @Model.FirstOrDefault().Orders.RecipientAddress</p>

    </div>
    <div id="lichsudiem" class="tab-content" style="display: none;">
        <p>Đơn này dùng: @Model.FirstOrDefault().Orders.CoinsUsed.Value.ToString("N0") xu</p>
        @* <p>Xu còn lại: @Model.FirstOrDefault().Orders.Users.Coins?.ToString("N0") xu</p> *@
    </div>
 
    <div class="d-flex flex-row justify-content-end">

        @if (@Model.FirstOrDefault().Orders.OrderStatus == -1)
        {
            <div class="d-flex p-2">
                <button type="button" class="btn btn-primary fw-normal text-white" onclick="DoiTrangThai('3')">Chờ Lấy Hàng</button>
            </div>
            <div class="d-flex p-2">
                <button type="button" class="btn btn-danger fw-normal text-white"  onclick="huyDon('@Model.FirstOrDefault().Orders.Id')" >Hủy bỏ</button>
            </div>
        }

        @if (@Model.FirstOrDefault().Orders.OrderStatus == 0)
        {
            <div class="d-flex p-2">
                <button type="button" class="btn btn-primary fw-normal text-white" onclick="DoiTrangThai('1')">Đã Thanh Toán</button>
            </div>
            <div class="d-flex p-2">
                <button type="button" class="btn btn-danger fw-normal text-white" onclick="huyDon('@Model.FirstOrDefault().Orders.Id')" >Hủy bỏ</button>
                   
                  
            </div>
        }
        @if (@Model.FirstOrDefault().Orders.OrderStatus == 1)
        {
            <div class="d-flex p-2">
                <button type="button" class="btn btn-success fw-normal text-white" disabled>Đã Thanh Toán</button>
            </div>
            
        }
        @if (@Model.FirstOrDefault().Orders.OrderStatus == 2)
        {
            <div class="d-flex p-2">
                <button type="button" class="btn btn-warning fw-normal text-white" onclick="DoiTrangThai('3')">Xác nhận đơn</button>
            </div>
            <div class="d-flex p-2">
                <button type="button" class="btn btn-danger fw-normal text-white" onclick="huyDon('@Model.FirstOrDefault().Orders.Id')">Hủy bỏ</button>
            </div>
        }
        @if (@Model.FirstOrDefault().Orders.OrderStatus == 3)
        {
            <div class="d-flex p-2">
                <button type="button" class="btn btn-primary fw-normal text-white" onclick="DoiTrangThai('4')"> Giao Hàng</button>
            </div>
            <div class="d-flex p-2">
                <button type="button" class="btn btn-danger fw-normal text-white" onclick="huyDon('@Model.FirstOrDefault().Orders.Id')">Hủy bỏ</button>
            </div>
        }
        @if (@Model.FirstOrDefault().Orders.OrderStatus == 4)
        {
            <div class="d-flex p-2">
                <button type="button" class="btn btn-primary fw-normal text-white" onclick="DoiTrangThai('8')">Đã Giao Hàng</button>
            </div>
            
        }
        
        @if (@Model.FirstOrDefault().Orders.OrderStatus == 6)
        {
            <div class="d-flex p-2">
                <button type="button" class="btn btn-primary fw-normal text-white" onclick="DoiTrangThai('6')">Đơn chưa hoàn thành</button>
            </div>
           
        }
        @if (@Model.FirstOrDefault().Orders.OrderStatus == 8)
        {
            <div class="d-flex p-2">
                <button type="button" class="btn btn-success fw-normal text-white" disabled>Hoàn thành</button>

            </div>
        }
        
        @if (@Model.FirstOrDefault().Orders.OrderStatus == 10)
        {
            <div class="d-flex p-2">
                <button type="button" class="btn btn-primary fw-normal text-white" onclick="DoiTrangThai('10')">Yêu cầu đổi trả</button>
            </div>
        }
        @if (@Model.FirstOrDefault().Orders.OrderStatus == 13)
        {
            <div class="d-flex p-2">
                <button type="button" class="btn btn-danger fw-normal text-white" onclick="DoiTrangThai('10')">Đơn đã huỷ</button>
            </div>
        }
        @* <div class="d-flex p-2">
        <button type="button" class="btn btn-success">Cập nhật đơn hàng</button>
        </div> *@
      
        <div class="d-flex p-2">
            <span class="rightinput"><a class ="btn btn-primary fw-normal text-white" href="/Admin/ManagerOrder/ExportPDF?orderId=@Model.FirstOrDefault().Orders.Id" title="Xuất hoá đơn">Xuất hoá đơn</a></span>
        </div>
       
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script type="text/javascript">
    function setModalStatus() {
        localStorage.setItem('modalOpen', 'true');
    }

    function checkModalStatus() {
        if (localStorage.getItem('modalOpen') === 'true') {
            $('#exampleModal').modal('show');
            localStorage.removeItem('modalOpen');
        }
    }
    function giam(productDetailId, orderId) {
        if (confirm("Bạn có chắc chắn muốn giảm không?")) {
            $.ajax({
                url: '@Url.Action("GiamSL", "ManagerOrder")',
                type: 'POST',
                data: {
                    productDetailId: productDetailId,
                    orderId: orderId
                },
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        location.reload();
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('Lỗi khi gửi yêu cầu');
                }
            });
        }
    }
    function tang(productDetailId, orderId) {
        if (confirm("Bạn có chắc chắn muốn tăng không?")) {
            $.ajax({
                url: '@Url.Action("TangSL", "ManagerOrder")',
                type: 'POST',
                data: {
                    productDetailId: productDetailId,
                    orderId: orderId
                },
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        location.reload();
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('Lỗi khi gửi yêu cầu');
                }
            });
        }
    }
    function removeItem(productDetailId, orderId) {
        if (confirm("Bạn có chắc chắn muốn xoá không?")) {
            $.ajax({
                url: '@Url.Action("Remove", "ManagerOrder")',
                type: 'POST',
                data: {
                    productDetailId: productDetailId,
                    orderId: orderId
                },
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        location.reload();
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('Lỗi khi gửi yêu cầu');
                }
            });
        }
    }
    $('.addProductButton').click(function (e) {
        e.preventDefault();
        var form = $(this).closest('form');
        var url = form.attr('action');
        var data = form.serialize();
        $.ajax({
            type: 'POST',
            url: url,
            data: data,
            success: function (response) {
                $('#message').html('<div class="alert alert-' + (response.success ? 'success' : 'danger') + '">' + response.message + '</div>');
                @* if (response.id != null) {
                    var slElement = $('#SL_' + response.id);
                    slElement.html(response.soluong);
                    console.log(response.total);
                    var totalMoney = $('#TT_' + response.id); 
                    totalMoney.html(response.total.toLocaleString('en-US', { minimumFractionDigits: 0 }));
                    var totalOrder = $('#Total');                  
                    totalOrder.html(response.totalorder.toLocaleString('en-US', { minimumFractionDigits: 0 }));
                      location.reload();
                      setModalStatus();
                } *@
                if(response.success){
                     // Tự động ẩn thông báo sau 1 giây
                    setTimeout(function () {
                        $('#message').html('');
                        location.reload();
                        setModalStatus();
                    }, 1000);
                }
                else if(!response.success){
                     setTimeout(function () {
                        $('#message').html('');
                    }, 1000);
                }
               
            },
            error: function () {
                $('#message').html('<div class="alert alert-danger">Có lỗi xảy ra.</div>');
                // Tự động ẩn thông báo sau 1 giây
                setTimeout(function () {
                    $('#message').html('');
                }, 1000);
            }
        });
    });
    $(document).ready(function () {
        checkModalStatus();
    });
</script>
@* <script src="~/fileadmin/assets/js/loadProductDetail.js"></script> *@
@* <script>
    var orderId = '@(Model.FirstOrDefault().Orders.Id.ToString())';
    function loadProductDetails() {
        $.ajax({
            type: "POST",
            url: '/Admin/ManagerOrder/GetProductDetail',
            success: function (response) {
                if (response.success) {
                    renderProductDetails(response.data);
                } else {
                    alert("Failed to load product details.");
                }
            },
            error: function () {
                alert("An error occurred while loading product details.");
            }
        });
    }

    function renderProductDetails(data) {
        var productList = $('#productList');
        productList.empty(); // Xóa nội dung cũ

        data.forEach(function (item) {
            var productHtml = `
                    <div class="col-3" style="width:20%">
                        <form class="formproduct" asp-controller="ManagerOrder" asp-action="AddProductDetailToOrder">
                                <input hidden name="productDetailId" value="${item.id}" />
                                    <input hidden name="orderId" value="${orderId}" />
                            <div class="card product-card">
                                <div class="card-img-top">
                                    <a href="">
                                        <img src="${item.imageUrl}" alt="image" class="img-prod img-fluid custom-img">
                                    </a>
                                </div>
                                <div class="card-body">
                                    <a href="">
                                        <p class="prod-content mb-0 text-muted">${item.productName} - SL: ${item.quantity}</p>
                                    </a>
                                    <p class="prod-content mb-0 text-muted">${item.sizeName} - ${item.colorName}</p>
                                    <div class="d-flex align-items-center justify-content-between mt-2 mb-3 flex-wrap gap-1">
                                        <b class="mb-0 text-truncate"><b>Giá bán: ${item.price?.toLocaleString()} VNĐ</b></b>
                                    </div>
                                    <div class="d-flex">
                                        <div class="flex-shrink-0">
                                            <div class="d-grid">
                                                <input class="form-control form-control-sm custom-input" type="number" name="Quantity" min="0" value="1" />
                                            </div>
                                        </div>
                                        <div class="flex-grow-1 ms-3">
                                            <div class="d-grid">
                                                <button class="addProductButton btn-prod-card form-control-sm custom-button">Thêm</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                `;
            productList.append(productHtml);
        });
    }
    $(document).ready(function () {
        $('.addProductButton').click(function (e) {
            e.preventDefault();
            var form = $(this).closest('form');
            var url = form.attr('action');
            var data = form.serialize();
            $.ajax({
                type: 'POST',
                url: url,
                data: data,
                success: function (response) {
                    $('#message').html('<div class="alert alert-' + (response.success ? 'success' : 'danger') + '">' + response.message + '</div>');
                    if (response.id != null) {
                        var slElement = $('#SL_' + response.id);
                        slElement.html(response.soluong);

                    }
                    // Tự động ẩn thông báo sau 1 giây
                    setTimeout(function () {
                        $('#message').html('');
                    }, 1000);
                },
                error: function () {
                    $('#message').html('<div class="alert alert-danger">Có lỗi xảy ra.</div>');
                    // Tự động ẩn thông báo sau 1 giây
                    setTimeout(function () {
                        $('#message').html('');
                    }, 1000);
                }
            });
        })
    });
</script> *@
<script>
    function DoiTrangThai(trangthai) {
        var ans = confirm("Cập nhật trạng thái hóa đơn này?");
        var id = "@Model.FirstOrDefault().Orders.Id";
        console.log(id);
        console.log(trangthai);
        if (ans) {
            $.ajax({
                url: '@Url.Action("DoiTrangThai", "ManagerOrder")',
                type: "POST",
                data: {
                    idhd: id,
                    trangthai: trangthai,

                },
                success: function (response) {
                    toastr.success(response.message, "Success Alert", { timeOut: 300 });
                    location.reload();
                },
                error: function (err) {
                    toastr.error('Thay đổi trạng thái thất bại', "Error Alert", { timeOut: 300 });
                }
            });
        }
    }
    // huy đơn
    function huyDon(IDHD) {
        var gc = $("#ghiChuinTTHD").val().trim();

        // Kiểm tra nếu ghi chú không được nhập hoặc mặc định là giá trị Model
        if (!gc || gc === '@Model.FirstOrDefault().Orders.Description') {
            toastr.error('Vui lòng nhập ghi chú hóa đơn', "Error Alert", { timeOut: 1000 });
            return;
        }

        // Xác nhận hủy hóa đơn
        if (confirm("Bạn có chắc chắn hủy Hóa đơn này?")) {
            $.ajax({
                url: "@Url.Action("HuyHD", "ManagerOrder")",
                type: "GET",
                dataType: 'json',
                data: {
                    idhd: IDHD,
                    ghichu: gc
                },
                success: function (response) {
                    toastr.success(response.message, "Success Alert", { timeOut: 300 });
                    // Đợi một chút trước khi reload để đảm bảo toastr có thời gian hiển thị
                    setTimeout(function () {
                        location.reload();
                    }, 500);
                },
                error: function (err) {
                    toastr.error('Thay đổi trạng thái thất bại', "Error Alert", { timeOut: 300 });
                }
            });
        }
    }

</script>

